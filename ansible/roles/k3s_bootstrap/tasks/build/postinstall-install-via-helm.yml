---
- name: get path to kubeconfig file
  set_fact: 
    kubeconfig_dir: "{{ item.value }}"
  loop: "{{ k3s_server_environment }}"
  when: 
    - item.key == 'KUBECONFIG'

- set_fact: 
    helm_values_dir: "/tmp/helm"

- name: Ensure that the helm values directory exists
  ansible.builtin.file:
    state: directory
    path: "{{ helm_values_dir }}"
    mode: 0755
  become: "{{ k3s_become_for_directory_creation | ternary(true, false, k3s_become_for_all) }}"

- name: copy the helm value files to the host
  copy:
    src: "{{ role_path }}/files/manifests/helm-values/"
    dest: "{{ helm_values_dir }}"
    mode: 0644
  become: "{{ k3s_become_for_directory_creation | ternary(true, false, k3s_become_for_all) }}"

- name: copy the metallb config file to the host
  ansible.builtin.template:
    src: "{{ role_path }}/files/manifests/metallb/metallb-config.yaml.j2"
    dest: "{{ helm_values_dir }}/{{ item | basename | replace('.j2','') }}"
    mode: 0644
  become: "{{ k3s_become_for_directory_creation | ternary(true, false, k3s_become_for_all) }}"

# rook ceph operator
- name: deploy rook-ceph operator helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.rook_ceph_operator.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.rook_ceph_operator.repo_address }}"
    chart_version: "{{ k3s_helm_install.rook_ceph_operator.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.rook_ceph_operator.install_name }}"
    release_namespace: "{{ k3s_helm_install.rook_ceph_operator.install_namespace }}"
    values_files: "{{ helm_values_dir }}/{{ k3s_helm_install.rook_ceph_operator.install_values }}"

# metallb
- name: deploy metallb helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.metallb.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.metallb.repo_address }}"
    chart_version: "{{ k3s_helm_install.metallb.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.metallb.install_name }}"
    release_namespace: "{{ k3s_helm_install.metallb.install_namespace }}"

# metallb config 
- name: add metallb config
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', '{{ helm_values_dir }}/metallb-config.yaml') | from_yaml }}"

# opa
- name: deploy OPA helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.opagatekeeper.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.opagatekeeper.repo_address }}"
    chart_version: "{{ k3s_helm_install.opagatekeeper.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.opagatekeeper.install_name }}"
    release_namespace: "{{ k3s_helm_install.opagatekeeper.install_namespace }}"
    values_files: "{{ helm_values_dir }}/{{ k3s_helm_install.opagatekeeper.install_values }}"
  when:
    - k3s_deploy_opa

# argocd
- name: deploy argocd helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.argocd.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.argocd.repo_address }}"
    chart_version: "{{ k3s_helm_install.argocd.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.argocd.install_name }}"
    release_namespace: "{{ k3s_helm_install.argocd.install_namespace }}"
    values_files: "{{ helm_values_dir }}/{{ k3s_helm_install.argocd.install_values }}"
  when:
    - k3s_deploy_argo

# postgres operator
- name: deploy postgres operator helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.postgres_operator.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.postgres_operator.repo_address }}"
    chart_version: "{{ k3s_helm_install.postgres_operator.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.postgres_operator.install_name }}"
    release_namespace: "{{ k3s_helm_install.postgres_operator.install_namespace }}"
  when:
    - k3s_deploy_postop

# nexus
- name: deploy sonatype nexus helm chart
  kubernetes.core.helm:
    name: "{{ k3s_helm_install.nexus.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.nexus.repo_address }}"
    chart_version: "{{ k3s_helm_install.nexus.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.nexus.install_name }}"
    release_namespace: "{{ k3s_helm_install.nexus.install_namespace }}"
    values_files: "{{ helm_values_dir }}/{{ k3s_helm_install.nexus.install_values }}"
  when:
    - k3s_deploy_nexus