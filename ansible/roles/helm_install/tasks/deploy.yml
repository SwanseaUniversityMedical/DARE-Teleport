---
- name: ensure that pip is installed
  apt:
    name:
      - python3-pip
    state: present

- name: ensure that the control node has the kubernetes python package installed
  pip:
    name: kubernetes

# rook ceph operator
- name: deploy rook-ceph operator helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.rook_ceph_operator.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.rook_ceph_operator.repo_address }}"
    chart_version: "{{ k3s_helm_install.rook_ceph_operator.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.rook_ceph_operator.install_name }}"
    release_namespace: "{{ k3s_helm_install.rook_ceph_operator.install_namespace }}"
    values_files: "{{ temp_helm_values_fp }}/{{ k3s_helm_install.rook_ceph_operator.install_values }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_rookceph

# rook ceph cluster
- name: deploy rook-ceph cluster helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.rook_ceph_cluster.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.rook_ceph_cluster.repo_address }}"
    chart_version: "{{ k3s_helm_install.rook_ceph_cluster.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.rook_ceph_cluster.install_name }}"
    release_namespace: "{{ k3s_helm_install.rook_ceph_cluster.install_namespace }}"
    values_files: "{{ temp_helm_values_fp }}/{{ k3s_helm_install.rook_ceph_cluster.install_values }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_rookceph

# metallb
- name: deploy metallb helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.metallb.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.metallb.repo_address }}"
    chart_version: "{{ k3s_helm_install.metallb.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.metallb.install_name }}"
    release_namespace: "{{ k3s_helm_install.metallb.install_namespace }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_metallb

# metallb config 
- name: add metallb config
  kubernetes.core.k8s:
    state: present
    src: "{{ temp_helm_values_fp }}/metallb-config.yaml"
  when:
    - k3s_deploy_metallb

# opa
- name: deploy OPA helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.opagatekeeper.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.opagatekeeper.repo_address }}"
    chart_version: "{{ k3s_helm_install.opagatekeeper.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.opagatekeeper.install_name }}"
    release_namespace: "{{ k3s_helm_install.opagatekeeper.install_namespace }}"
    values_files: "{{ temp_helm_values_fp }}/{{ k3s_helm_install.opagatekeeper.install_values }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_opa

# argocd
- name: deploy argocd helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.argocd.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.argocd.repo_address }}"
    chart_version: "{{ k3s_helm_install.argocd.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.argocd.install_name }}"
    release_namespace: "{{ k3s_helm_install.argocd.install_namespace }}"
    values_files: "{{ temp_helm_values_fp }}/{{ k3s_helm_install.argocd.install_values }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_argo

# postgres operator
- name: deploy postgres operator helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.postgres_operator.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.postgres_operator.repo_address }}"
    chart_version: "{{ k3s_helm_install.postgres_operator.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.postgres_operator.install_name }}"
    release_namespace: "{{ k3s_helm_install.postgres_operator.install_namespace }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_postop

# nexus
- name: deploy sonatype nexus helm chart
  kubernetes.core.helm:
    chart_ref: "{{ k3s_helm_install.nexus.chart_name }}"
    chart_repo_url: "{{ k3s_helm_install.nexus.repo_address }}"
    chart_version: "{{ k3s_helm_install.nexus.chart_version }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_dir }}"
    release_name: "{{ k3s_helm_install.nexus.install_name }}"
    release_namespace: "{{ k3s_helm_install.nexus.install_namespace }}"
    values_files: "{{ temp_helm_values_fp }}/{{ k3s_helm_install.nexus.install_values }}"
    wait: true
  environment: "{{ proxy_env }}"
  when:
    - k3s_deploy_nexus

# minio operator
- name: deploy minio operator
  block:
    - name: update krew
      shell: "{{ kubectl_bin_path }} krew update"

    - name: install minio operator
      shell: "{{ kubectl_bin_path }} krew install minio"

    - shell: "echo $HOME"
      register: home_dir

    - shell: "echo $PATH"
      register: current_path

    - name: initialise the minio operator
      shell: "{{ kubectl_bin_path }} minio init"
      environment:
        PATH: '{{ current_path.stdout }}:{{ home_dir.stdout }}/.krew/bin'
  when:
    - k3s_deploy_minioop
  